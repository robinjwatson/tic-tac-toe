{"version":3,"sources":["utils.js","components/Square.js","components/Board.js","components/Status.js","components/Moves.js","components/Game.js","serviceWorker.ts","state/reducers/gameCountReducer.js","state/reducers/statusReducer.js","state/reducers/index.js","state/reducers/store.js","index.tsx"],"names":["calculateWinner","squares","lines","i","length","a","b","c","Square","onClick","value","label","className","Board","handleOnClick","Status","current","stepNumber","xIsNext","winner","utils","Moves","history","jumpTo","map","_","move","desc","Game","dispatch","useDispatch","gameCount","useSelector","state","isXnext","statusReducer","useState","Array","fill","setHistory","setStepNumber","title","useMemo","handleClick","slice","randomNumber","Math","floor","random","concat","type","Boolean","window","location","hostname","match","initialState","gameCountReducer","action","reducers","combineReducers","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d5bd4e75.chunk.js","sourcesContent":["import './index.css';\r\n\r\nexport const randomNumber = () => {\r\n    return (\r\n        Math.floor(Math.random() * 9)\r\n    );\r\n};\r\n\r\nexport const calculateWinner = (squares) => {\r\n    const lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6]\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        const [a, b, c] = lines[i];\r\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n            return squares[a];\r\n        }\r\n    }\r\n    return null;\r\n};","import '../index.css';\r\n\r\nconst Square = ({ onClick, value, label }) => {\r\n    return (\r\n        <button data-cy={\"square\" + label} className=\"square\" onClick={onClick}>\r\n            {value}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default Square","import Square from './Square';\r\nimport '../index.css';\r\n\r\nconst Board = ({ squares, onClick }) => {\r\n    const handleOnClick = (i) => {\r\n        return (\r\n            () => onClick(i)\r\n        )\r\n    };\r\n    return (\r\n        <div>\r\n            <div className=\"board-row\">\r\n                <div>\r\n                    <Square\r\n                        label=\"One\"\r\n                        value={squares[0]}\r\n                        onClick={handleOnClick(0)}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <Square\r\n                        label=\"Two\"\r\n                        value={squares[1]}\r\n                        onClick={handleOnClick(1)}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <Square\r\n                        label=\"Three\"\r\n                        value={squares[2]}\r\n                        onClick={handleOnClick(2)}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"board-row\">\r\n                <div>\r\n                    <Square\r\n                        label=\"Four\"\r\n                        value={squares[3]}\r\n                        onClick={handleOnClick(3)}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <Square\r\n                        label=\"Five\"\r\n                        value={squares[4]}\r\n                        onClick={handleOnClick(4)}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <Square\r\n                        label=\"Six\"\r\n                        value={squares[5]}\r\n                        onClick={handleOnClick(5)}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"board-row\">\r\n                <Square\r\n                    label=\"Seven\"\r\n                    value={squares[6]}\r\n                    onClick={handleOnClick(6)}\r\n                />\r\n                <Square\r\n                    label=\"Eight\"\r\n                    value={squares[7]}\r\n                    onClick={handleOnClick(7)}\r\n                />\r\n                <Square\r\n                    label=\"Nine\"\r\n                    value={squares[8]}\r\n                    onClick={handleOnClick(8)}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Board","import * as utils from '../utils';\r\nimport '../index.css';\r\n\r\nconst Status = ({ current, stepNumber, xIsNext }) => {\r\n    const winner = utils.calculateWinner(current);\r\n    const draw = !winner && stepNumber === 9;\r\n    let content\r\n    if (winner) {\r\n        content = \"Winner: \" + winner;\r\n    } else if (draw) {\r\n        content = \"Draw, replay\";\r\n    } else {\r\n        content = \"Next player: \" + (xIsNext ? \"X\" : \"O\");\r\n    };\r\n    return (\r\n        content\r\n    )\r\n};\r\n\r\nexport default Status","import '../index.css';\r\n\r\nconst Moves = ({ history, jumpTo }) => {\r\n    return history.map((_, move) => {\r\n        const desc = move ?\r\n            'Go to move #' + move :\r\n            'Go to game start';\r\n        return (\r\n            <li key={move}>\r\n                <button\r\n                    data-cy={\"gameCount\" + move}\r\n                    onClick={() => jumpTo(move)}>{desc}\r\n                </button>\r\n            </li>\r\n        );\r\n    })\r\n};\r\n\r\nexport default Moves","import { useState, useMemo } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport * as utils from '../utils';\r\nimport Board from './Board';\r\nimport Status from './Status';\r\nimport Moves from './Moves';\r\nimport '../index.css';\r\n\r\nconst Game = () => {\r\n    const dispatch = useDispatch()\r\n    const gameCount = useSelector((state) => state.gameCount.value)\r\n    const isXnext = useSelector((state) => state.statusReducer.isXnext)\r\n    const [history, setHistory] = useState([Array(9).fill(null)])\r\n    const [stepNumber, setStepNumber] = useState(0)\r\n\r\n    const jumpTo = (move) => {\r\n        setHistory(history.slice(0, move + 1))\r\n        setStepNumber(move)\r\n\r\n        if (move === 0) {\r\n            dispatch({ type: 'incrementGameCounter' })\r\n        }\r\n        if ((move % 2) === 0) {\r\n            dispatch({ type: 'xIsNext' })\r\n            return;\r\n        } else {\r\n            dispatch({ type: 'oIsNext' })\r\n        }\r\n\r\n    };\r\n\r\n    const title = useMemo(() =>\r\n        `Move number # ${stepNumber}`, [stepNumber]);\r\n\r\n    const handleClick = (i) => {\r\n        const squares = history[stepNumber].slice();\r\n        const randomNumber = utils.randomNumber();\r\n\r\n        if (utils.calculateWinner(squares) || squares[i]) {\r\n            return;\r\n        }\r\n        squares[i] = isXnext ? \"🌮\" : \"🍩\";\r\n\r\n        setHistory(history.concat([squares]))\r\n        setStepNumber(stepNumber + 1)\r\n        dispatch({ type: 'oIsNext' })\r\n\r\n        if (!isXnext) {\r\n            handleClick(randomNumber)\r\n            dispatch({ type: 'xIsNext' })\r\n            return;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"game\">\r\n            <div>\r\n                <h1>\r\n                    \"Tic-Taco\"\r\n                </h1>\r\n            </div>\r\n\r\n            <div className=\"game-board\"\r\n                data-cy=\"square\">\r\n                <Board\r\n                    squares={history[stepNumber]}\r\n                    onClick={i => handleClick(i)}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"gameCount\">\r\n                <div>\r\n                    {gameCount}\r\n                </div>\r\n\r\n                <div className=\"resetButton\">\r\n                    <button data-cy=\"resetButton\" onClick={() => { dispatch({ type: 'resetGameCounter' }) }}>\r\n                    </button>\r\n                </div>\r\n\r\n                <div>\r\n                    Reset game count\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"game-info\">\r\n                <div>\r\n                    <Status\r\n                        current={history[stepNumber]}\r\n                        stepNumber={stepNumber}\r\n                        xIsNext={isXnext}\r\n                    />\r\n                </div>\r\n\r\n                <div>\r\n                    {title}\r\n                </div>\r\n\r\n            </div>\r\n            <ol className=\"Moves\">\r\n                <Moves\r\n                    history={history}\r\n                    jumpTo={jumpTo}\r\n                />\r\n            </ol>\r\n        </div >\r\n    );\r\n};\r\n\r\nexport default Game","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const initialState = {\r\n    value: 0\r\n}\r\n\r\nconst gameCountReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"incrementGameCounter\":\r\n            return {\r\n                ...state,\r\n                value: state.value + 1\r\n            }\r\n        case \"resetGameCounter\":\r\n            return initialState;\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport default gameCountReducer;","const initialState = {\r\n    value: 0,\r\n    isXnext: true\r\n}\r\n\r\nconst statusReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"xIsNext\":\r\n            return {\r\n                ...state,\r\n                value: state.value + 1,\r\n                isXnext: true\r\n            };\r\n        case \"oIsNext\":\r\n            return {\r\n                ...state,\r\n                value: state.value + 1,\r\n                isXnext: false\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport default statusReducer;\r\n\r\n// // const exampleReducer = (state = 0, action) => {\r\n// //     switch (action.type) {\r\n// //         case \"increment\":\r\n// //             return state + 1;\r\n// //         case \"decrement\":\r\n//             return state - 1;\r\n//         case \"increment by\":\r\n//             return state + action.payload;\r\n//         case \"decrement by\":\r\n//             return state - action.payload;\r\n//         default:\r\n//             return state\r\n//     }\r\n// };\r\n\r\n// export default exampleReducer;","import { combineReducers } from \"redux\";\r\nimport gameCountReducer from \"./gameCountReducer\";\r\nimport statusReducer from \"./statusReducer\";\r\n\r\nconst reducers = combineReducers({\r\n    gameCount: gameCountReducer,\r\n    statusReducer: statusReducer,\r\n\r\n});\r\n\r\nexport default reducers","import { createStore } from \"redux\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport reducers from \"./index\"\r\n\r\nexport const store = createStore(\r\n    reducers, composeWithDevTools()\r\n);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Game from './components/Game';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './index.css';\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./state/reducers/store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <Game />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}